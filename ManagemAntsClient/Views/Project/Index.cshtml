@{
    Layout = "~/Views/Shared/_Navbar.cshtml";
}
@model ManagemAntsClient.Models.ProjectPage


<div>
    <nav class="navbar py-0 bg-blue shadow sticky-top">
        <a href="@Url.Action("Index", "Dashboard")" class="navbar-brand text-white">Accueil</a>
        <h3 class="text-white m-2">@Model.Project.name</h3>
        <span class="navbar-text text-white">
            @Model.LoggedUser.pseudo
            <button class="btn btn-danger btn-sm ml-2" onclick="logout()">Deconnexion</button>
        </span>
    </nav>
    <div class="row no-gutters justify-content-around">
        <div class="col-8 shadow bg-lightgray p-2 m-3" style="height:100%">
            <div class="row mt-2">
                <div class="col-3 align-self-center">
                    <div class="row">
                        <div class="dropdown col-auto">
                            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

                            </a>

                            <div class="dropdown-menu" id="taskFilters" belaria-laledby="dropdownMenuLink">
                                <a class="dropdown-item btn">Aucun filtre</a>
                                <a class="dropdown-item btn">À faire</a>
                                <a class="dropdown-item btn">En cours</a>
                                <a class="dropdown-item btn">Fait</a>
                                <a class="dropdown-item btn">Rendu</a>
                            </div>
                        </div>
                        <div class="form-check d-flex align-items-center">
                            @if (!Model.isMyTasks)
                            {
                                <input class="form-check-input" type="checkbox" value="false" id="myTasks" />
                            }
                            else
                            {
                                <input class="form-check-input" type="checkbox" value="true" id="myTasks" checked/>
                            }
                            <label class="form-check-label" for="flexCheckDefault">
                                Mes Tâches
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-6 text-center"><h3>Tâches</h3></div>
                <div class="col-3 text-right align-self-center">
                    <button onclick="openTaskAdd()" class="btn btn-secondary btn-sm text-sm-center ">Ajouter une tâche</button>
                </div>
            </div>
            <div class="p-3">
                @if (Model.Tasks.Count == 0)
                {
                    <div class="row justify-content-center m-4">
                        <h5 class="align-self-center">Aucune tâche n'a été trouvée.</h5>
                    </div>
                }

                @foreach (var task in Model.Tasks)
                {
                    <div class="row bg-dark rounded mb-2 p-2" style="@(task.state == 3 ? "opacity:0.9" : "")">
                        <div class="col-auto mr-auto pl-2 text-white row d-flex align-items-center">
                            <button class="btn btn-sm btn-secondary mr-1 bg-transparent noBorder border-0">
                                <img class="white-img " src="~/img/edit-solid.svg" onclick="openTaskInfos(@task.id)" />
                            </button>

                            @if (task.state == 3)
                            {
                                <del>@task.name</del>
                            }
                            else
                            {
                                @task.name
                            }
                        </div>
                        <div class="col-sm-3 pr-1 d-flex align-items-center justify-content-center">
                            @if (task.state == 0)
                            {
                                <div class="h-100" style="width:100px"></div>
                            }
                            else
                            {
                                @using (Html.BeginForm("BackStateTask", "Project", task, FormMethod.Post))
                                {
                                    <button class="btn btn-danger btn-sm">Retour</button>
                                }
                            }

                            <label class="text-white bg-transparent border pr-2 pl-2 pt-1 pb-1 ml-2 mr-2 ml-2 text-center" style="border-radius:5px; width:100%">@task.getState()</label>

                            @if (task.state == 2)
                            {
                                <button class="btn btn-primary btn-sm mr-1 ml-1" onclick="openTaskFinished(@task.id)" name="rendre">Rendre</button>
                            }
                            else if (task.state == 1)
                            {
                                @using (Html.BeginForm("NextStateTask", "Project", task, FormMethod.Post))
                                {
                                    <button class="btn btn-info btn-sm" name="finir">Terminer</button>
                                }
                            }
                            else if (task.state == 0)
                            {
                                @using (Html.BeginForm("NextStateTask", "Project", task, FormMethod.Post))
                                {
                                    <button class="btn btn-success btn-sm" name="suivant">Suivant</button>
                                }
                            }
                            else
                            {
                                <div class="h-100" style="width:130px"></div>
                            }
                        </div>
                    </div>
                    <partial name="_taskModifyModal" model="@task" />
                    <partial name="_taskInfoModal" model="@new ManagemAntsClient.Models.InfosTask() { Task = task, LoggedUser = Model.LoggedUser }" />
                    <partial name="_taskFinishedModal" model="@new ManagemAntsClient.Models.InfosTask() { Task = task, LoggedUser = Model.LoggedUser }" />
                }
                <div class="row justify-content-center">
                    <button onclick="openTaskAdd()" class="btn btn-secondary bg-transparent border-0 mt-3">
                        <img src="~/img/plus.png" style="height:25px; width:25px" />
                    </button>
                </div>
            </div>
        </div>
        <div class="col-lg">
            <div class="shadow mb-4 bg-lightgray p-2 m-3">
                <div class="row m-4">
                    <h3>Description</h3>
                    @if (Model.LoggedUser.role == 0)
                    {
                        <button class="btn btn-sm btn-secondary mr-1 bg-transparent noBorder border-0">
                            <img class="black-img mb-1" src="~/img/edit-solid.svg" />
                        </button>
                    }
                </div>
                <div class="m-4">
                    @Model.Project.description
                </div>
            </div>
            <div class="shadow mb-4 bg-lightgray p-2 m-3">
                <div class="m-4">
                    <h3>Membres</h3>
                </div>

                <div class="m-4">
                    <h5>Créateur</h5>
                </div>
                @foreach (var creator in Model.Creators)
                {
                    <div class="m-4 p-2 shadow bg-collaborator">
                        @creator.pseudo (@creator.firstname @creator.lastname)
                    </div>
                }

                @if (Model.Mangers.Count != 0)
                {
                    <div class="m-4">
                        <h5>Manageur(s)</h5>
                    </div>
                    @foreach (var manager in Model.Mangers)
                    {
                        <div class="m-4 p-2 shadow bg-collaborator">
                            @manager.pseudo (@manager.firstname @manager.lastname)
                        </div>
                    }
                }

                @if (Model.Collaborators.Count != 0)
                {
                    <div class="m-4">
                        <h5>Collaborateur(s)</h5>
                    </div>
                    @foreach (var collaborator in Model.Collaborators)
                    {
                        <div class="m-4 p-2 shadow bg-collaborator">
                            @collaborator.pseudo (@collaborator.firstname @collaborator.lastname)
                        </div>
                    }
                }
                @if (Model.LoggedUser.role != 2)
                {
                    <div class="text-center m-4">
                        <a href="@Url.Action("Index", "AddCollaborator", new
                            {
                                projectId = Model.Project.id,
                                projectName = Model.Project.name,
                                userId = Model.LoggedUser.id
                            }) ">
                            <button type="button" class="btn btn-md btn-secondary w-100" onclick="addCollaborator()">
                                Gérer les collaborateurs
                            </button>
                        </a>
                    </div>
                }
            </div>
            <div class="row no-gutters justify-content-center">
                <a href="@Url.Action("Index", "ProjectStats", new { projectId = Model.Project.id })">
                    <button class="btn btn-secondary btn-lg mr-3">Statistiques</button>
                </a>
                @if (Model.LoggedUser.role == 0)
                {
                    <button onclick="openDeleteProject(@Model.Project.id)" class="btn btn-danger btn-lg ml-3">Suprimer le projet</button>
                }
            </div>
        </div>


    </div>
</div>
<partial name="_taskAddModal"/>
<partial name="_projectDeleteModal" model="@Model.Project">


<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>
    function logout() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("logout", "Connexion")",
            success: function () {
                location.reload()
            }
        })
    }
    window.onload = function () {
        if (@Model.OpenedTask != "-1")
            openTaskInfos(@Model.OpenedTask)
    }

    let searchParams = new URLSearchParams(window.location.search)
    let filter = searchParams.get("filter");
    if (filter == null)
        filter = "Aucun filtre";
    $("#dropdownMenuLink").text(filter);

    function openTaskInfos(id) {
        $(`#taskInfoModal-${id}`).modal("show");
    }

    function openTaskAdd() {
        $("#taskAddModal").modal("show");
    }

    function openTaskFinished(id) {
        $(`#taskFinishedModal-${id}`).modal("show");
    }

    function openDeleteProject(id) {
        $(`#projectDeleteModal-${id}`).modal("show");
    }


    $(document).ready(
        function () {
            $('#taskFilters a').on('click', function () {
                var value = $('#myTasks').val();
                var filterval = $(this).text();
                var boolValue = (value == 'true');
                var clearurl = document.location.href.split("&")[0];
                var url = clearurl + "&filter=" + filterval + "&myTasks=" + boolValue;
                document.location = url;
            }
            )
            $('#myTasks').on('click', function () {
                var filter = $('#dropdownMenuLink').text();
                var value = $('#myTasks').val();
                var boolValue = !(value == 'true');
                var clearurl = document.location.href.split("&")[0];
                var url = clearurl + "&filter=" + filter + "&myTasks=" + boolValue;
                document.location = url;
            })
        });


</script>